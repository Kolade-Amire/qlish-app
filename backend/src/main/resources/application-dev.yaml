spring:
  mvc:
    problemdetails:
      enabled: true
  devtools:
    livereload:
      enabled: true
    restart:
      enabled: true
  application:
    name: ${APP_NAME}
  docker:
    compose:
      enabled: false
  session:
    redis:
      flush-mode: on-save
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - profile
              - email
            redirect-uri: ${GOOGLE_CLIENT_REDIRECT_URI}
        provider:
          google:
            authorization-uri: ${GOOGLE_CLIENT_AUTHORIZATION_URI}
            token-uri: ${GOOGLE_CLIENT_TOKEN_URI}
            user-info-uri: ${USER_INFO_URI}
            user-name-attribute: sub
  data:
    mongodb:
      uri: ${MONGO_URL}
      database: ${DB_NAME}
      password: ${MONGO_PASSWORD}
      username: ${MONGO_USERNAME}
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}
jwt:
  secret: ${JWT_SECRET}
  issuer: ${JWT_ISSUER}
  audience: ${JWT_AUDIENCE}
  access-token-expiration: ${ACCESS_TOKEN_EXPIRATION}
  refresh-token-expiration: ${REFRESH_TOKEN_EXPIRATION}


server:
  port: ${BACKEND_PORT}
  error:
    include-message:
gemini-api:
  key: ${GEMINI_API_KEY}

logging:
  level:
    org:
      springframework: WARN
      springframework.security: DEBUG
